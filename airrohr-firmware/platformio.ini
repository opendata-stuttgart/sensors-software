; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .

;  -DDEBUG_ESP_PORT=Serial
;  -DDEBUG_ESP_WIFI
;  -D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK221

; Reenable when we have a way to protect the UI from internet access
;  -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH
;

[common]
build_flags =
  -DVTABLES_IN_FLASH
  -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
  -D HTTPCLIENT_1_1_COMPATIBLE=0 -D NO_GLOBAL_SERIAL=0
  -DNDEBUG -DFP_IN_IROM -frandom-seed=b61f78373

build_flags_esp32 =
  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
  -DVTABLES_IN_FLASH -DBEARSSL_SSL_BASIC
build_flags_esp32_release = ${common.build_flags_esp32} -DNDEBUG
build_flags_esp32_debug = ${common.build_flags_esp32} -g -Og -fno-inline -DUSING_JTAG_DEBUGGER_PINS=1 -DDEBUG_ESP_PORT=Serial

board_build.ldscript = eagle.flash.4m3m.ld
board_build.filesystem = spiffs
board_build.f_cpu = 160000000L

; Always depend on specific library versions (wherever possible and only for external libraries)
; Keep Library names in the order of their dependencies (leaves at the top)
; ESP8266WiFi in both cases is necessary to solve a case sensitivity issue with WiFiUdp.h
; Use library ID numbers instead of names for libraries whose names are not unique
;   (like OneWire, LiquidCrystal_I2C and TinyGPSPlus)

lib_deps_external =
  paulstoffregen/OneWire@2.3.5
  marcoschwartz/LiquidCrystal_I2C@1.1.4
  adafruit/Adafruit BMP085 Library@1.0.1
  adafruit/Adafruit HTU21DF Library@1.0.5
  adafruit/Adafruit SHT31 Library@1.2.0
  milesburton/DallasTemperature@3.9.1
  sparkfun/SparkFun SCD30 Arduino Library @ ^1.0.13
  bblanchon/ArduinoJson@6.18.3
  ThingPulse/ESP8266 and ESP32 OLED driver for SSD1306 displays @ ^4.2.1
  mikalhart/TinyGPSPlus@1.0.2
  adafruit/Adafruit INA219@^1.1.1

; system libraries from platform -> no version number
lib_deps_esp8266_platform =
  Hash
  Wire
  ESP8266WiFi
  DNSServer
  ESP8266HTTPClient
  ESP8266WebServer
  ESP8266mDNS
  EspSoftwareSerial

; system libraries from platform -> no version number
lib_deps_esp32_platform =
  Wire
  WiFi
  DNSServer
  WiFiClientSecure
  HTTPClient
  FS
  SPIFFS
  WebServer
  Update
  ESPmDNS

lib_deps_esp8266 = ${common.lib_deps_esp8266_platform} ${common.lib_deps_external}
lib_deps_esp32 = ${common.lib_deps_esp32_platform} ${common.lib_deps_external}

extra_scripts = platformio_script.py
# This release is reflecting the Arduino Core 3.0.1 release
# When the requirement for Arduino Core is raised, this
# needs to be adjusted to the matching version from
# https://github.com/platformio/platform-espressif8266/releases
platform_version = espressif8266@3.1.0
platform_version_esp32 = espressif32@1.11.1 ; using Arduino core 1.0.4

[DISABLEDenv:lolin_d32_pro_debug]
lang = DE
platform = ${common.platform_version_esp32}
framework = arduino
board = lolin_d32_pro
build_flags = ${common.build_flags_esp32_debug} '-DINTL_DE' '-DFLIP_I2C_PMSERIAL'
lib_deps = ${common.lib_deps_esp32}
extra_scripts = ${common.extra_scripts}
debug_tool = custom
targets = debug

[DISABLEDenv:heltec_wifi_lora_32_V2]
lang = DE
platform = ${common.platform_version_esp32}
framework = arduino
board = heltec_wifi_lora_32_V2
; to know if you have a WROVER or WROOM board, look in the file
; .platformio/platforms/espressif32/boards/<your_boardname>.json
; when you find the following line, you have a WROOM board:
;    "openocd_board": "esp-wroom-32.cfg"
build_flags = ${common.build_flags_esp32_release} '-DINTL_DE' '-DESP32_WROOM_MODULE'
lib_deps = ${common.lib_deps_esp32}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2]
lang = de
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
check_tool = clangtidy
check_flags =
  clangtidy: --checks=-*,cert-*,bugprone-*,clang-analyzer-*,hicpp-*,modernize-*,performance-*,portability-*,-readability-*
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_DE
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_bg]
lang = bg
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_BG
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_cn]
lang = cn
framework = arduino
platform = ${common.platform_version}
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_CN
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_cz]
lang = cz
framework = arduino
platform = ${common.platform_version}
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_CZ
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_dk]
lang = dk
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_DK
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_ee]
lang = ee
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_EE
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_en]
lang = en
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_EN
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_es]
lang = es
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_ES
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_fi]
lang = fi
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_FI
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_fr]
lang = fr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_FR
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_gr]
lang = gr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_GR
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_hu]
lang = hu
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_HU
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_it]
lang = it
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_IT
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[[env:nodemcuv2_jp]
lang = jp
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_JP
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_lt]
lang = lt
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_LT
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_lu]
lang = lu
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_LU
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_lv]
lang = lv
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_LV
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_nl]
lang = nl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_NL
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_pl]
lang = pl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_PL
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_pt]
lang = pt
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_PT
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_ro]
lang = ro
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_RO
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_rs]
lang = rs
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_RS
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_ru]
lang = ru
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_RU
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_se]
lang = se
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_SE
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_si]
lang = si
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_SI
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_sk]
lang = sk
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_SK
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_tr]
lang = tr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_TR
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_ua]
lang = ua
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.ldscript = ${common.board_build.ldscript}
board_build.filesystem = ${common.board_build.filesystem}
build_flags = ${common.build_flags} -DINTL_UA
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}
