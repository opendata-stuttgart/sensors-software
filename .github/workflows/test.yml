# SSN Airrohr Firmware CI workflow

name: SSN test (test.yml)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master-ssn branch
  push:
      tags: 
        - 'TEST-*'
  #   branches: 
  #     - actions*
  # create:
  #   branches: 
  #     - actions*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # - name: Dump GitHub context
      # env:
      #   GITHUB_CONTEXT: ${{ toJson(github) }}
      # run: echo "$GITHUB_CONTEXT"
      # - name: Extract branch name
      #   shell: bash
      #   run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
      # - name: Test
      #   run: echo "${BRANCH_NAME}"

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
    
#     # map a step output to a job output
#     # outputs:
#     #   version_num: ${{steps.version.outputs.VERSION}}

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: Checkout
#         uses: actions/checkout@v2
      
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.7'
          
#       - name: Load dependencies from cache
#         uses: actions/cache@v2
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo github.run_number ${{ github.run_number }}

#       # Runs a set of commands using the runners shell
#       - name: Install dependencies
#         run: |
#           python3 -m pip install --upgrade pip
#           pip3 install platformio
#           platformio --version
          
#       - name: Run builds
#         run: |
#           cd airrohr-firmware && pwd && ls -l && platformio run && ls -l builds/
#           cd ../airrohr-update-loader && pwd && ls -l && platformio run && ls -l builds/

#       - name: Run List all
#         run: pwd && ls -l airrohr-firmware/builds/

#       - name: Tar Results
#         run: |
#           tar czvf airrohr-firmware-builds.tar.gz -C airrohr-firmware/builds/ .
          
#       - name: Store airrohr-firmware
#         uses: actions/upload-artifact@v2
#         with:
#           if-no-files-found: error
#           name: airrohr-firmware-builds
#           path: airrohr-firmware-builds.tar.gz
#           retention-days: 30
      
#       - name: Store update-loader
#         uses: actions/upload-artifact@v2
#         with:
#           if-no-files-found: error
#           name: airrohr-update-loader
#           path: airrohr-update-loader/builds/latest_loader.bin
#           retention-days: 30
        
#       - name: Upload Release
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "airrohr-firmware-builds.tar.gz, airrohr-update-loader/builds/latest_loader.bin"
#           token: ${{ secrets.GITHUB_TOKEN }}
#           # Instead add tags through every Release related commit
#           tag: SSN-NRZ-2022-134-B${{ github.run_number }}
